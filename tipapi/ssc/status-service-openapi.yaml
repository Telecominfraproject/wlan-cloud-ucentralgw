openapi: 3.0.3
info:
  title: CloudSDK Status API
  description: APIs that provide services for viewing, updating and deleting various data elements of statuses.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
- name: Status Data
  
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Status data models
#
    StatusDataType:
      type: string
      enum:
      - EQUIPMENT_ADMIN
      - NETWORK_ADMIN
      - NETWORK_AGGREGATE
      - PROTOCOL
      - FIRMWARE
      - PEERINFO
      - LANINFO
      - NEIGHBOURINGINFO
      -  OS_PERFORMANCE
      - NEIGHBOUR_SCAN
      - RADIO_UTILIZATION
      - ACTIVE_BSSIDS
      - CLIENT_DETAILS
   
    Status:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - Status
        customerId:
          type: integer
          format: int32
        equipmentId:
          type: integer
          format: int64
        statusDataType:
          $ref: '#/components/schemas/StatusDataType'
        statusDetails:
          $ref: '#/components/schemas/StatusDetails'
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: This class does not perform checks against concurrrent updates. Here last update always wins.
          type: integer
          format: int64

    StatusDetails:
      oneOf:
        - $ref: '#/components/schemas/ActiveBSSIDs'
        - $ref: '#/components/schemas/ClientConnectionDetails'
        - $ref: '#/components/schemas/EquipmentAdminStatusData'
        - $ref: '#/components/schemas/EquipmentLANStatusData'
        - $ref: '#/components/schemas/EquipmentNeighbouringStatusData'
        - $ref: '#/components/schemas/EquipmentPeerStatusData'
        - $ref: '#/components/schemas/EquipmentProtocolStatusData'
        - $ref: '#/components/schemas/EquipmentScanDetails'
        - $ref: '#/components/schemas/EquipmentUpgradeStatusData'
        - $ref: '#/components/schemas/NetworkAdminStatusData'
        - $ref: '#/components/schemas/NetworkAggregateStatusData'
        - $ref: '#/components/schemas/OperatingSystemPerformance'
        - $ref: '#/components/schemas/RadioUtilizationReport'
      discriminator:
        propertyName: model_type
    
    ActiveBSSIDs:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - ActiveBSSIDs
        statusDataType:
          type: string
          enum:
          - ACTIVE_BSSIDS
        activeBSSIDs:
          type: array
          items: 
            $ref: '#/components/schemas/ActiveBSSID'
            
    ActiveBSSID:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - ActiveBSSID
        bssid:
          type: string
        ssid:
          type: string
        radioType:
          $ref: '#/components/schemas/RadioType'
        numDevicesConnected:
          type: integer
          format: int32
          

    ClientConnectionDetails:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - ClientConnectionDetails
        statusDataType:
          type: string
          enum:
          - CLIENT_DETAILS
        numClientsPerRadio:
          $ref: '#/components/schemas/IntegerPerRadioTypeMap'
            
    IntegerPerRadioTypeMap:
      properties:
        is5GHz:
          type: integer
          format: int32
        is5GHzU:
          type: integer
          format: int32
        is5GHzL:
          type: integer
          format: int32
        is2dot4GHz:
          type: integer
          format: int32
    

    EquipmentAdminStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentAdminStatusData
        statusDataType:
          type: string
          enum:
          - EQUIPMENT_ADMIN
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        statusMessage:
          type: string
    
    StatusCode:
      type: string
      enum:
      - normal
      - requiresAttention
      - error
      - disabled

    EquipmentLANStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentLANStatusData
        statusDataType:
          type: string
          enum:
          - LANINFO
        vlanStatusDataMap:
          $ref: '#/components/schemas/VLANStatusDataMap'

    VLANStatusDataMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/VLANStatusData'
      
    VLANStatusData:
      type: object
      properties:
        ipBase:
          type: string
        subnetMask:
          type: string
        gateway:
          type: string
        dhcpServer:
          type: string
        dnsServer1:
          type: string
        dnsServer2:
          type: string
        dnsServer3:
          type: string


    EquipmentNeighbouringStatusData:
      description: TODO - either describe the properties of this object or remove it.
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentNeighbouringStatusData
        statusDataType:
          type: string
          enum:
          - NEIGHBOURINGINFO

    EquipmentPeerStatusData:
      description: TODO - either describe the properties of this object or remove it.
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentPeerStatusData
        statusDataType:
          type: string
          enum:
          - PEERINFO


    EquipmentProtocolStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentProtocolStatusData
        statusDataType:
          type: string
          enum:
          - PROTOCOL
        poweredOn:
          type: boolean
        protocolState:
          $ref: '#/components/schemas/EquipmentProtocolState'
        reportedHwVersion:
          type: string
        reportedSwVersion:
          type: string
        reportedSwAltVersion:
          type: string
        cloudProtocolVersion:
          type: string
        reportedIpV4Addr:
          type: string
        reportedIpV6Addr:
          type: string
        reportedMacAddr:
          $ref: '#/components/schemas/MacAddress'
        countryCode:
          type: string
        systemName:
          type: string
        systemContact:
          type: string
        systemLocation:
          type: string
        bandPlan:
          type: string
        serialNumber:
          type: string
        baseMacAddress:
          $ref: '#/components/schemas/MacAddress'
        reportedApcAddress:
          type: string
        lastApcUpdate:
          type: integer
          format: int64
        isApcConnected:
          type: boolean
        ipBasedConfiguration:
          type: string
        reportedSku:
          type: string
        reportedCC:
          $ref: '#/components/schemas/CountryCode'
        radiusProxyAddress:
          type: string
        reportedCfgDataVersion:
          type: integer
          format: int64
        cloudCfgDataVersion:
          type: integer
          format: int64
        
        
    EquipmentProtocolState:
      type: string
      enum:
      - init
      - joined
      - configuration_received
      - ready
      - error_when_joining
      - error_processing_configuration


    EquipmentScanDetails:
      description: TODO - document it or remove it
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentScanDetails
        statusDataType:
          type: string
          enum:
          - NEIGHBOUR_SCAN
        


    EquipmentUpgradeStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - EquipmentUpgradeStatusData
        statusDataType:
          type: string
          enum:
          - FIRMWARE
        activeSwVersion:
          type: string
        alternateSwVersion:
          type: string
        targetSwVersion:
          type: string
        retries:
          type: integer
          format: int32
        upgradeState:
          $ref: '#/components/schemas/EquipmentUpgradeState'
        reason:
          $ref: '#/components/schemas/EquipmentUpgradeFailureReason'
        upgradeStartTime:
          type: integer
          format: int64
        switchBank:
          type: boolean
          
    EquipmentUpgradeState:
      type: string
      enum:
      - undefined
      - download_initiated
      - downloading
      - download_failed
        #firmware downloaded into reserve area but not flashed to bank
      - download_complete
      - apply_initiated
      - applying
      - apply_failed
      - apply_complete
      - reboot_initiated
      - rebooting
      - out_of_date
      - up_to_date
      - reboot_failed
      
    EquipmentUpgradeFailureReason:
      type: string
      enum:
      - downloadRequestRejected
      - validationFailed
      - unreachableUrl
      - downloadFailed 
      - applyRequestRejected
      - applyFailed
      - rebootRequestRejected
      - invalidVersion
      - rebootWithWrongVersion
      - maxRetries
      - rebootTimedout
      - downloadRequestFailedFlashFull
          

    NetworkAdminStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - NetworkAdminStatusData
        statusDataType:
          type: string
          enum:
          - NETWORK_ADMIN
        dhcpStatus:
          $ref: '#/components/schemas/StatusCode'
        dnsStatus:
          $ref: '#/components/schemas/StatusCode'
        cloudLinkStatus:
          $ref: '#/components/schemas/StatusCode'
        radiusStatus:
          $ref: '#/components/schemas/StatusCode'
        averageCoveragePerRadio:
          $ref: '#/components/schemas/IntegerPerRadioTypeMap'
        equipmentCountsBySeverity:
          $ref: '#/components/schemas/IntegerStatusCodeMap'
          
    IntegerStatusCodeMap:
      type: object
      properties:
        normal:
          type: integer
          format: int32
        requiresAttention:
          type: integer
          format: int32
        error:
          type: integer
          format: int32
        disabled:
          type: integer
          format: int32
        

    MinMaxAvgValueInt:
      type: object
      properties:
        minValue:
          type: integer
          format: int32
        maxValue:
          type: integer
          format: int32
        avgValue:
          type: integer
          format: int32
    
    CommonProbeDetails:
      type: object
      properties:
        latencyMs:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        numSuccessProbeRequests:
          type: integer
          format: int32
        numFailedProbeRequests:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/StatusCode'
        
      
    NetworkAggregateStatusData:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - NetworkAggregateStatusData
        statusDataType:
          type: string
          enum:
          - NETWORK_AGGREGATE
        dhcpDetails:
          $ref: '#/components/schemas/CommonProbeDetails'
        dnsDetails:
          $ref: '#/components/schemas/CommonProbeDetails'
        cloudLinkDetails:
          $ref: '#/components/schemas/CommonProbeDetails'
        noiseFloorDetails:
          $ref: '#/components/schemas/NoiseFloorDetails'
        channelUtilizationDetails:
          $ref: '#/components/schemas/ChannelUtilizationDetails'
        radioUtilizationDetails:
          $ref: '#/components/schemas/RadioUtilizationDetails'
        userDetails:
          $ref: '#/components/schemas/UserDetails'
        trafficDetails:
          $ref: '#/components/schemas/TrafficDetails'
        radiusDetails:
          $ref: '#/components/schemas/RadiusDetails'
        equipmentPerformanceDetails:
          $ref: '#/components/schemas/EquipmentPerformanceDetails'
        capacityDetails:
          $ref: '#/components/schemas/CapacityDetails'
        numberOfReportingEquipment:
          type: integer
          format: int32
        numberOfTotalEquipment:
          type: integer
          format: int32
        beginGenerationTsMs:
          type: integer
          format: int64
        endGenerationTsMs:
          type: integer
          format: int64
        beginAggregationTsMs:
          type: integer
          format: int64
        endAggregationTsMs:
          type: integer
          format: int64
        numMetricsAggregated:
          type: integer
          format: int32
        coverage:
          type: integer
          format: int32
        behavior:
          type: integer
          format: int32
        handoff:
          type: integer
          format: int32
        wlanLatency:
          type: integer
          format: int32


    NoiseFloorDetails:
      type: object
      properties:
        perRadioDetails:
          $ref: '#/components/schemas/NoiseFloorPerRadioDetailsMap'
        indicatorValue:
          type: integer
          format: int32
    
    NoiseFloorPerRadioDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/NoiseFloorPerRadioDetails'
        is5GHzU:
          $ref: '#/components/schemas/NoiseFloorPerRadioDetails'
        is5GHzL:
          $ref: '#/components/schemas/NoiseFloorPerRadioDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/NoiseFloorPerRadioDetails'
    
    NoiseFloorPerRadioDetails:
      properties:
        noiseFloor:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        numGoodEquipment:
          type: integer
          format: int32
        numWarnEquipment:
          type: integer
          format: int32
        numBadEquipment:
          type: integer
          format: int32
      
    ChannelUtilizationDetails:
      type: object
      properties:
        perRadioDetails:
          $ref: '#/components/schemas/ChannelUtilizationPerRadioDetailsMap'
        indicatorValue:
          type: integer
          format: int32
    
    ChannelUtilizationPerRadioDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/ChannelUtilizationPerRadioDetails'
        is5GHzU:
          $ref: '#/components/schemas/ChannelUtilizationPerRadioDetails'
        is5GHzL:
          $ref: '#/components/schemas/ChannelUtilizationPerRadioDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/ChannelUtilizationPerRadioDetails'
    
    ChannelUtilizationPerRadioDetails:
      properties:
        channelUtilization:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        numGoodEquipment:
          type: integer
          format: int32
        numWarnEquipment:
          type: integer
          format: int32
        numBadEquipment:
          type: integer
          format: int32

      
    RadioUtilizationDetails:
      type: object
      properties:
        perRadioDetails:
          $ref: '#/components/schemas/RadioUtilizationPerRadioDetailsMap'

    RadioUtilizationPerRadioDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/RadioUtilizationPerRadioDetails'
        is5GHzU:
          $ref: '#/components/schemas/RadioUtilizationPerRadioDetails'
        is5GHzL:
          $ref: '#/components/schemas/RadioUtilizationPerRadioDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/RadioUtilizationPerRadioDetails'
    
    RadioUtilizationPerRadioDetails:
      properties:
        avgAssocClientTx:
          type: integer
          format: int32
        avgUnassocClientTx:
          type: integer
          format: int32
        avgAssocClientRx:
          type: integer
          format: int32
        avgUnassocClientRx:
          type: integer
          format: int32
        avgNonWifi:
          type: integer
          format: int32

    MinMaxAvgValueIntPerRadioMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        is5GHzU:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        is5GHzL:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        is2dot4GHz:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
      
    IntegerValueMap:
      type: object
      additionalProperties:
        type: integer
    
    UserDetails:
      type: object
      properties:
        totalUsers:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        usersPerRadio:
          $ref: '#/components/schemas/MinMaxAvgValueIntPerRadioMap'
        numGoodEquipment:
          type: integer
          format: int32
        numWarnEquipment:
          type: integer
          format: int32
        numBadEquipment:
          type: integer
          format: int32
        userDevicePerManufacturerCounts:
          $ref: '#/components/schemas/IntegerValueMap'
        totalApsReported:
          type: integer
          format: int32
        indicatorValue:
          type: integer
          format: int32
        indicatorValuePerRadio:
          $ref: '#/components/schemas/IntegerPerRadioTypeMap'
        linkQualityPerRadio:
          $ref: '#/components/schemas/LinkQualityAggregatedStatsPerRadioTypeMap'
        clientActivityPerRadio:
          $ref: '#/components/schemas/ClientActivityAggregatedStatsPerRadioTypeMap'
        
    LinkQualityAggregatedStatsPerRadioTypeMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/LinkQualityAggregatedStats'
        is5GHzU:
          $ref: '#/components/schemas/LinkQualityAggregatedStats'
        is5GHzL:
          $ref: '#/components/schemas/LinkQualityAggregatedStats'
        is2dot4GHz:
          $ref: '#/components/schemas/LinkQualityAggregatedStats'
    
    LinkQualityAggregatedStats:
      properties:
        snr:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        badClientCount:
          type: integer
          format: int32
        averageClientCount:
          type: integer
          format: int32
        goodClientCount:
          type: integer
          format: int32
      

    ClientActivityAggregatedStatsPerRadioTypeMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/ClientActivityAggregatedStats'
        is5GHzU:
          $ref: '#/components/schemas/ClientActivityAggregatedStats'
        is5GHzL:
          $ref: '#/components/schemas/ClientActivityAggregatedStats'
        is2dot4GHz:
          $ref: '#/components/schemas/ClientActivityAggregatedStats'
      
    ClientActivityAggregatedStats:
      properties:
        mbps:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        highClientCount:
          type: integer
          format: int32
        mediumClientCount:
          type: integer
          format: int32
        lowClientCount:
          type: integer
          format: int32
    

      
    TrafficDetails:
      type: object
      properties:
        perRadioDetails:
          $ref: '#/components/schemas/TrafficPerRadioDetailsPerRadioTypeMap'
        indicatorValueRxMbps:
          #float
          type: number
        indicatorValueTxMbps:
          #float
          type: number

    TrafficPerRadioDetailsPerRadioTypeMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/TrafficPerRadioDetails'
        is5GHzU:
          $ref: '#/components/schemas/TrafficPerRadioDetails'
        is5GHzL:
          $ref: '#/components/schemas/TrafficPerRadioDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/TrafficPerRadioDetails'
      
    TrafficPerRadioDetails:
      type: object
      properties:
        minRxMbps:
          #float
          type: number
        maxRxMbps:
          #float
          type: number
        avgRxMbps:
          #float
          type: number
        totalRxMbps:
          #float
          type: number
        minTxMbps:
          #float
          type: number
        maxTxMbps:
          #float
          type: number
        avgTxMbps:
          #float
          type: number
        totalTxMbps:
          #float
          type: number
        numGoodEquipment:
          type: integer
          format: int32
        numWarnEquipment:
          type: integer
          format: int32
        numBadEquipment:
          type: integer
          format: int32
        totalApsReported:
          type: integer
          format: int32


          
    RadiusDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusCode'
        radiusServerDetails:
          type: array
          items:
            $ref: '#/components/schemas/RadiusServerDetails'
            
    RadiusServerDetails:
      type: object
      properties:
        address:
          type: string
        radiusLatency:
          $ref: '#/components/schemas/MinMaxAvgValueInt'

      
    EquipmentPerformanceDetails:
      type: object
      properties:
        avgFreeMemory:
          type: integer
          format: int32
        avgCpuUtilCore1:
          type: integer
          format: int32
        avgCpuUtilCore2:
          type: integer
          format: int32
        avgCpuTemperature:
          type: integer
          format: int32
      
    CapacityDetails:
      type: object
      properties:
        perRadioDetails:
          $ref: '#/components/schemas/CapacityPerRadioDetailsMap'

    CapacityPerRadioDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/CapacityPerRadioDetails'
        is5GHzU:
          $ref: '#/components/schemas/CapacityPerRadioDetails'
        is5GHzL:
          $ref: '#/components/schemas/CapacityPerRadioDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/CapacityPerRadioDetails'
    
    CapacityPerRadioDetails:
      properties:
        totalCapacity:
          type: integer
          format: int32
        availableCapacity:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        unavailableCapacity:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        usedCapacity:
          $ref: '#/components/schemas/MinMaxAvgValueInt'
        unusedCapacity:
          $ref: '#/components/schemas/MinMaxAvgValueInt'

    

    OperatingSystemPerformance:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - OperatingSystemPerformance
        statusDataType:
          type: string
          enum:
          - OS_PERFORMANCE
        numCamiCrashes:
          type: integer
          format: int32
        uptimeInSeconds:
          type: integer
          format: int64
        avgCpuUtilization:
          #float
          type: number
        avgCpuPerCore:
          type: array
          items:
            #float
            type: number
        avgFreeMemory:
          type: integer
          format: int32
        avgCpuTemperature:          
          #float
          type: number
          
          

    RadioUtilizationReport:
      type: object
      properties:
        model_type:
          type: string
          enum:
          - RadioUtilizationReport
        statusDataType:
          type: string
          enum:
          - RADIO_UTILIZATION
        radioUtilization:
          $ref: '#/components/schemas/EquipmentPerRadioUtilizationDetailsMap'
        capacityDetails:
          $ref: '#/components/schemas/EquipmentCapacityDetailsMap'
        avgNoiseFloor:
          $ref: '#/components/schemas/IntegerPerRadioTypeMap'
        
          
    EquipmentPerRadioUtilizationDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/EquipmentPerRadioUtilizationDetails'
        is5GHzU:
          $ref: '#/components/schemas/EquipmentPerRadioUtilizationDetails'
        is5GHzL:
          $ref: '#/components/schemas/EquipmentPerRadioUtilizationDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/EquipmentPerRadioUtilizationDetails'
          
    EquipmentPerRadioUtilizationDetails:
      type: object
      properties:
        wifiFromOtherBss:
          $ref: '#/components/schemas/MinMaxAvgValueInt'

    EquipmentCapacityDetailsMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/EquipmentCapacityDetails'
        is5GHzU:
          $ref: '#/components/schemas/EquipmentCapacityDetails'
        is5GHzL:
          $ref: '#/components/schemas/EquipmentCapacityDetails'
        is2dot4GHz:
          $ref: '#/components/schemas/EquipmentCapacityDetails'

    EquipmentCapacityDetails:
      type: object
      properties:
        totalCapacity:
          description:  A theoretical maximum based on channel bandwidth
          type: integer
          format: int32
        availableCapacity:
          description: The percentage of capacity that is available for clients.
          type: integer
          format: int32
        unavailableCapacity:
          description: The percentage of capacity that is not available for clients (e.g. beacons, noise, non-wifi)
          type: integer
          format: int32
        unusedCapacity:
          description: The percentage of the overall capacity that is not being used.
          type: integer
          format: int32
        usedCapacity:
          description: The percentage of the overall capacity that is currently being used by associated clients.
          type: integer
          format: int32
          
#
# Objects related to pagination
#

    SortOrder:
      type: string
      default: asc
      enum:
      - asc
      - desc
          
    SortColumnsStatus:
      type: object
      required:
      - model_type
      - columnName
      - sortOrder
      properties: 
        model_type:
          type: string
          enum:
          - ColumnAndSort
        columnName:
          type: string
          default: id
          enum: 
          - customerId
          - equipmentId
        sortOrder:
          $ref: '#/components/schemas/SortOrder'
          
    PaginationContextStatus:
      type: object
      required: 
      - maxItemsPerPage
      properties:
        model_type:
          type: string
          enum:
          - PaginationContext
        maxItemsPerPage:
          type: integer
          format: int32
          default: 20
        lastReturnedPageNumber:
          type: integer
          format: int32
        totalItemsReturned:
          type: integer
          format: int32
        lastPage:
          type: boolean
        cursor:
          type: string
      example: 
        model_type: PaginationContext
        maxItemsPerPage: 10
          
      
    PaginationResponseStatus:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        context:
          $ref: '#/components/schemas/PaginationContextStatus'           
      
#
# Other objects
#

    RadioType:
      type: string
      enum:
        - is5GHz
        - is2dot4GHz
        - is5GHzU
        - is5GHzL
        
    MacAddress:
      type: object
      properties:
        addressAsString:
          type: string
          
    CountryCode:
      type: string
      enum:
         - AD
         - AE
         - AF
         - AG
         - AI
         - AL
         - AM
         - AO
         - AQ
         - AR
         - AS
         - AT
         - AU
         - AW
         - AX
         - AZ
         - BA
         - BB
         - BD
         - BE
         - BF
         - BG
         - BH
         - BI
         - BJ
         - BL
         - BM
         - BN
         - BO
         - BQ
         - BR
         - BS
         - BT
         - BV
         - BW
         - BY
         - BZ
         - CA
         - CC
         - CD
         - CF
         - CG
         - CH
         - CI
         - CK
         - CL
         - CM
         - CN
         - CO
         - CR
         - CU
         - CV
         - CW
         - CX
         - CY
         - CZ
         - DE
         - DJ
         - DK
         - DM
         - DO
         - DZ
         - EC
         - EE
         - EG
         - EH
         - ER
         - ES
         - ET
         - FI
         - FJ
         - FK
         - FM
         - FO
         - FR
         - GA
         - GB
         - GD
         - GE
         - GF
         - GG
         - GH
         - GI
         - GL
         - GM
         - GN
         - GP
         - GQ
         - GR
         - GS
         - GT
         - GU
         - GW
         - GY
         - HK
         - HM
         - HN
         - HR
         - HT
         - HU
         - ID
         - IE
         - IL
         - IM
         - IN
         - IO
         - IQ
         - IR
         - IS
         - IT
         - JE
         - JM
         - JO
         - JP
         - KE
         - KG
         - KH
         - KI
         - KM
         - KN
         - KP
         - KR
         - KW
         - KY
         - KZ
         - LA
         - LB
         - LC
         - LI
         - LK
         - LR
         - LS
         - LT
         - LU
         - LV
         - LY
         - MA
         - MC
         - MD
         - ME
         - MF
         - MG
         - MH
         - MK
         - ML
         - MM
         - MN
         - MO
         - MP
         - MQ
         - MR
         - MS
         - MT
         - MU
         - MV
         - MW
         - MX
         - MY
         - MZ
         - NA
         - NC
         - NE
         - NF
         - NG
         - NI
         - NL
         - NO
         - NP
         - NR
         - NU
         - NZ
         - OM
         - PA
         - PE
         - PF
         - PG
         - PH
         - PK
         - PL
         - PM
         - PN
         - PR
         - PS
         - PT
         - PW
         - PY
         - QA
         - RE
         - RO
         - RS
         - RU
         - RW
         - SA
         - SB
         - SC
         - SD
         - SE
         - SG
         - SH
         - SI
         - SJ
         - SK
         - SL
         - SM
         - SN
         - SO
         - SR
         - SS
         - ST
         - SV
         - SX
         - SY
         - SZ
         - TC
         - TD
         - TF
         - TG
         - TH
         - TJ
         - TK
         - TL
         - TM
         - TN
         - TO
         - TR
         - TT
         - TV
         - TW
         - TZ
         - UA
         - UG
         - UM
         - US
         - UY
         - UZ
         - VA
         - VC
         - VE
         - VG
         - VI
         - VN
         - VU
         - WF
         - WS
         - YE
         - YT
         - ZA
         - ZM
         - ZW
         - UNSUPPORTED
      default: CA   
## ---------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
 
  /api/status:
    put:
      tags:
      - Status Data
      summary: Updates status record
      operationId: updateStatus
      requestBody:
        description: Status info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Status Data
      summary: Deletes Status record
      operationId: deleteStatus
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      - name: equipmentId
        in: query
        description: Equipment ID
        required: true
        schema:
          type: integer
          format: int64
      - name: statusDataTypes
        in: query
        description: Status Data Types
        required: false
        content:
          text/plain:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/StatusDataType'          
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/status/orNull:
     get:
      tags:
      - Status Data
      summary: Get status else returns null
      operationId: getStatusOrNull
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      - name: equipmentId
        in: query
        description: Equipment ID
        required: true
        schema:
          type: integer
          format: int64
      - name: statusDataType
        in: query
        description: Status Data Type
        required: true
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/StatusDataType'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/status/forEquipment:
     get:
      tags:
      - Status Data
      summary: Get status By customerId and equipmentId
      operationId: getStatusByCustomerAndEquipment
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: equipmentId
        in: query
        description: Equipment ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        500:
          $ref: '#/components/responses/GenericApiError'
  
  /api/status/forCustomer:
     get:
      tags:
      - Status Data
      summary: Get status By customerId
      operationId: getStatusByCustomerId
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort options
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SortColumnsStatus'
      - name: paginationContext
        in: query
        description: pagination context
        required: false
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PaginationContextStatus'
            examples:
              initialPginationContext:
                value:
                  model_type: PaginationContext
                  maxItemsPerPage: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseStatus'
        500:
          $ref: '#/components/responses/GenericApiError'
          
  /api/status/forCustomerWithFilter:
     get:
      tags:
      - Status Data
      summary: Get equipment By customerId with filter
      operationId: getEquipmentByCustomerIdWithFilter
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: equipmentIds
        in: query
        description: Set of Equipment IDs
        required: false
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      - name: statusDataTypes
        in: query
        description: Status Data Types
        required: false
        content:
          text/plain:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/StatusDataType'
      - name: sortBy
        in: query
        description: sort options
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SortColumnsStatus'
      - name: paginationContext
        in: query
        description: pagination context
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PaginationContextStatus'
            examples:
              initialPginationContext:
                value:
                  model_type: PaginationContext
                  maxItemsPerPage: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseStatus'
        500:
          $ref: '#/components/responses/GenericApiError'

  /api/status/bulk:
     put:
      tags:
      - Status Data
      summary: Updates batch of status records
      operationId: updateBatchStatus
      requestBody:
        description: customer info
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Status'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/status/forEquipmentWithFilters:
     get:
      tags:
      - Status Data
      summary: Get equipment with filters
      operationId: getForEquipment
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: equipmentIds
        in: query
        description: Set of Equipment IDs
        required: false
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      - name: statusDataTypes
        in: query
        description: Status Data Types
        required: false
        content:
          text/plain:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/StatusDataType'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        500:
          $ref: '#/components/responses/GenericApiError'
  
  








