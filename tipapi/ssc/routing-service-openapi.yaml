openapi: 3.0.3
info:
  title: CloudSDK Routing API
  description: APIs that provide services for viewing, updating and deleting various data elements of routing.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
- name: Routing Data
- name: Gateway Data
  
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Status data models
#
 
    EquipmentRoutingRecord:
      properties:
        id:
          type: integer
          format: int64
        equipmentId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int32
        gatewayId:
          type: integer
          format: int64
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          type: integer
          format: int64
          
    EquipmentGatewayRecord:
      properties:
        id:
          type: integer
          format: int64
        hostname:
          type: string
        ipAddr:
          type: string
        port:
          type: integer
          format: int64
        gatewayType:
          $ref: '#/components/schemas/GatewayType'
        createdTimeStamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          type: integer
          format: int64
      
    GatewayType:
      type: string
      enum:
      - CEGW
      - CNAGW
      - UNSUPPORTED
      
#
# Objects for Pagination
#
 
    PaginationContextRouting:
      type: object
      required: 
      - maxItemsPerPage
      properties:
        model_type:
          type: string
          enum:
          - PaginationContext
        maxItemsPerPage:
          type: integer
          format: int32
          default: 20
        lastReturnedPageNumber:
          type: integer
          format: int32
        totalItemsReturned:
          type: integer
          format: int32
        lastPage:
          type: boolean
        cursor:
          type: string
      example: 
        model_type: PaginationContext
        maxItemsPerPage: 1
    
    PaginationResponseRouting:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentRoutingRecord'
        context:
          $ref: '#/components/schemas/PaginationContextRouting' 
          
    SortOrder:
      type: string
      default: asc
      enum:
      - asc
      - desc
    
    SortColumnsRouting:
      type: object
      required:
      - model_type
      - columnName
      - sortOrder
      properties: 
        model_type:
          type: string
          enum:
          - ColumnAndSort
        columnName:
          type: string
          default: id
          enum: 
          - id
          - hostname
        sortOrder:
          $ref: '#/components/schemas/SortOrder'
       
##-------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
    
  /api/routing:
    post:
      tags:
      - Routing Data
      summary: Creates new routing record
      operationId: createRouting
      requestBody:
        description: Routing info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRoutingRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Routing Data
      summary: Updates routing record
      operationId: updateRouting
      requestBody:
        description: Routing info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRoutingRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Routing Data
      summary: Deletes routing using routingId
      operationId: deleteRoutingById
      parameters:
      - name: routingId
        in: query
        description: Routing ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Routing Data
      summary: Get routing using routingId
      operationId: getRoutingById
      parameters:
      - name: routingId
        in: query
        description: Routing ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/routing/orNull:
     get:
      tags:
      - Routing Data
      summary: Get routing using routingId else returns null
      operationId: getRoutingByIdOrNull
      parameters:
      - name: routingId
        in: query
        description: Routing ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/routing/inSet:
    get:
      tags:
      - Routing Data
      summary: Retrieves routing data within a specified set
      operationId: getRoutingBySet
      parameters:
      - name: routingIdSet
        in: query
        description: Set of routing IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/routing/forCustomer:
    get:
      tags:
      - Routing Data
      summary: Get Routing By customerId
      operationId: getRoutingByCustomerId
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort options
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SortColumnsRouting'
      - name: paginationContext
        in: query
        description: pagination context
        required: false
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PaginationContextRouting'
            examples:
              initialPginationContext:
                value:
                  model_type: PaginationContext
                  maxItemsPerPage: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseRouting'
        500:
          $ref: '#/components/responses/GenericApiError'
          
  /api/routing/byEquipmentId:
    get:
      tags:
      - Routing Data
      summary: Get routing records using equipmentId
      operationId: getRoutingByEquipmentId
      parameters:
      - name: equipmentId
        in: query
        description: Equipment Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentRoutingRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'        
## Gateway Data --------------------------------------------------
  /api/routing/gateway:
    post:
      tags:
      - Gateway Data
      summary: Creates new gateway record
      operationId: createGatewayRouting
      requestBody:
        description: Gateway record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentGatewayRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Gateway Data
      summary: Updates gateway record
      operationId: updateGatewayRouting
      requestBody:
        description: Gateway record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentGatewayRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Gateway Data
      summary: Deletes gateway record using gatewayId
      operationId: deleteGatewayById
      parameters:
      - name: gatewayId
        in: query
        description: Gateway ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Gateway Data
      summary: Get gateway record using gatewayId
      operationId: getGatewayById
      parameters:
      - name: gatewayId
        in: query
        description: Gateway ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/routing/gateway/byHostname:
    get:
      tags:
      - Gateway Data
      summary: Get gateway records using hostname
      operationId: getGatewaysByHostname
      parameters:
      - name: hostname
        in: query
        description: Hostname
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'  
    delete:
      tags:
      - Gateway Data
      summary: Deletes gateway record using hostname
      operationId: deleteGatewayByHostname
      parameters:
      - name: hostname
        in: query
        description: Hostname
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/routing/gateway/byType:
    get:
      tags:
      - Gateway Data
      summary: Get gateway records using gateway type
      operationId: getGatewaysByType
      parameters:
      - name: gatewayType
        in: query
        description: Type of Gateway
        required: true
        schema:
          $ref: '#/components/schemas/GatewayType'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/routing/gateway/byEquipmentId:
    get:
      tags:
      - Gateway Data
      summary: Get gateway records using equipmentId
      operationId: getGatewayByEquipmentId
      parameters:
      - name: equipmentId
        in: query
        description: Equipment Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentGatewayRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'   
  
  
  
 
 
 
 

