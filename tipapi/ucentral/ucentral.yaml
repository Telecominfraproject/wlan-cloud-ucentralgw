openapi: 3.0.1
info:
  title: uCentral gateway API
  description: A process to manage configuration for devices.
  version: 0.0.5
  termsOfService:
    http://example.com/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Arilia Support
    email: ucentralsupport@arilia.com
    url: https://www.ucentral.info/support

servers:
  - url: 'https://localhost:16001/api/v1'

security:
  - bearerAuth: []

components:
  responses:

    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'

    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericGoodAnswer'

  securitySchemes:
    bearerAuth:        # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    DeviceType:
      type: string
      default: AP
      enum:
        - AP
        - SWITCH
        - IOT

    Device:
      type: object
      description: Definition of uCentral device
      required:
        - deviceType
      properties:
        serialNumber:
          type: string
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        macAddress:
          type: string
        manufacturer:
          type: string
        UUID:
          type: integer
          format: int64
        configuration:
          type: string
        notes:
          type: string
        createdTimestamp:
          type: string
          format: 'date-time'
        lastConfigurationChange:
          type: string
          format: 'date-time'
        lastConfigurationDownload:
          type: string
          format: 'date-time'

    DeviceList:
      type: object
      description: Definition of uCentral device
      properties:
        devices:
          type: array
          items:
            $ref : '#/components/schemas/Device'

    DeviceStatus:
      type: object
      description: Current device status
      properties:
        serialNumber:
          type: string
        ipAddress:
          type: string
        txBytes:
          type: integer
          format: int64
        rxBytes:
          type: integer
          format: int64
        messageCount:
          type: integer
          format: int64
        UUID:
          type: integer
          format: int64
        connected:
          type: boolean
        lastContact:
          type: string
          format: 'date-time'
        protocol:
          type: integer
          format: int32
        firmware:
          type: string

    DeviceCapabilities:
      type: object
      description: Describes the capabilities a device has recorded in uCentral
      properties:
        serialNumber:
          type: string
        capabilities:
          type: string
        lastUpdate:
          type: string
          format: 'date-time'
        firstUpdate:
          type: string
          format: 'date-time'

    StatisticsDetails:
      type: object
      properties:
        serialNumber:
          type: string
        recorded:
          type: string
          format: 'date-time'
        UUID:
          type: integer
          format: int64
        values:
          type: string

    StatisticsRecords:
      type: object
      properties:
        serialNumber:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsDetails'

    CommandDetails:
      type: object
      properties:
        command:
          type: string
        runAt:
          type: string
          format: 'date-time'
        deviceId:
          type: integer
          format: int64

    CommandResults:
      type: object
      properties:
        command:
          type: string
        results:
          type: string
        completed:
          type: string
          format: 'date-time'
        deviceId:
          type: integer
          format: int64

    GenericErrorResponse:
      description: Typical error response
      properties:
        ErrorCode:
          type: integer
        ErrorDetails:
          type: string
        ErrorDescription:
          type: string

    GenericGoodAnswer:
      description: used for all succesful responses.
      properties:
        Operation:
          type: string
        Details:
          type: string
        Code:
          type: integer

    WebTokenRequest:
      description: User Id and password.
      type: object
      required:
        - userId
        - password
      properties:
        userId:
          type: string
          default: support@example.com
        password:
          type: string
          default: support
        refreshToken:
          type: string
      example:
        userId: support@example.com
        password: support

    WebTokenResult:
      description: Login and Refresh Tokens to be used in subsequent API calls.
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          format: int32
        idle_timeout:
          type: integer
          format: int32
        username:
          type: string
        created:
          type: string
          format: 'date-time'
        aclTemplate:
          $ref: '#/components/schemas/WebTokenAclTemplate'

    WebTokenAclTemplate:
      type: object
      properties:
        aclTemplate:
          $ref: '#/components/schemas/AclTemplate'

    AclTemplate:
      type: object
      properties:
        Read:
          type: boolean
        ReadWrite:
          type: boolean
        ReadWriteCreate:
          type: boolean
        Delete:
          type: boolean
        PortalLogin:
          type: boolean

    DeviceConfigureRequest:
      type: object
      properties:
        serialNumber:
          type: string
        UUID:
          type: integer
          format: int64
        configuration:
          type: string

    DeviceLog:
      type: object
      properties:
        log:
          type: string
        recorded:
          type: integer
          format: int64

    DeviceLogList:
      type: object
      properties:
        serialNumber:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/DeviceLog'

paths:
  /oauth2:
    post:
      tags:
        - Authentication
      summary: Get access token - to be used as Bearer token header for all other API requests.
      operationId: getAccessToken
      requestBody:
        description: User id and password
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebTokenRequest'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebTokenResult'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /oauth2/{token}:
    delete:
      tags:
        - Authentication
      summary: Revoke a token.
      operationId: removeAccessToken
      parameters:
        - in: path
          name: token
          schema:
            type:
              string
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericGoodAnswer'
        404:
          $ref: '#/components/responses/NotFound'

  /devices:
    get:
      tags:
        - Devices
      summary: Returns a list of devices.
      description: Get a list of devices.
      operationId: getDeviceList
      parameters:
        - in: query
          description: Pagination start (starts at 1. If not specified, 1 is assumed)
          name: offset
          schema:
            type: integer
          required: false
        - in: query
          description: Maximum number of entries to return (if absent, no limit is assumed)
          name: limit
          schema:
            type: integer
          required: false
        - in: query
          description: Filter the results
          name: filter
          schema:
            type: string
          required: false
      responses:
        200:
          description: List devices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        403:
          $ref: '#/components/responses/Unauthorized'

  /device/{serialNumber}:
    get:
      tags:
        - Devices
      summary: Retrieve information for a single device
      description: Retrieve all the inforamtion about a single device
      operationId: getDeviceInformation
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      responses:
        200:
          description: Device information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Devices
      summary: Creating a new device
      operationId: createNewDevice
      requestBody:
        description: Information used to create the new device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        200:
          description: Successful device creation will return the device record with the proper device ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        403:
          $ref: '#/components/responses/Unauthorized'

    put:
      tags:
        - Devices
      summary: Updating a new device
      operationId: updateNewDevice
      requestBody:
        description: Information used to create the new device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        200:
          description: Successful device creation will return the device record with the proper device ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        403:
          $ref: '#/components/responses/Unauthorized'

    delete:
      tags:
        - Devices
      summary: Deleting a single device
      operationId: deleteDevice
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Unauthorized'

  /device/{serialNumber}/logs:
    get:
      tags:
        - Commands
      summary: Get the latest logs for a given device
      operationId: getDeviceLogs
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
        - in: query
          name: startDate
          schema:
            type: string
            # format 2021-03-05T05:27:37Z
            format: 'date-time'
          required: false
        - in: query
          name: endDate
          schema:
            type: string
            # format 2021-03-05T05:27:37Z
            format: 'date-time'
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Array of device logs for this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLogList'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Commands
      summary: Delete some device logs
      operationId: deleteDeviceLogs
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
        - in: query
          name: startDate
          schema:
            type: string
            format: 'date-time'
          required: false
        - in: query
          name: endDate
          schema:
            type: string
            format: 'date-time'

      responses:
        200:
          description: Successfully deleted logs for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericGoodAnswer'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'


  /device/{serialNumber}/capabilities:
    get:
      tags:
        - Commands
      summary: Get the latest capabilities for a given device
      operationId: getDeviceCapabilities
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of logs for this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCapabilities'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Commands
      summary: Delete the capabilities for a given device
      operationId: deleteDeviceCapabilities
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of logs for this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericGoodAnswer'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'


  /device/{serialNumber}/statistics:
    get:
      tags:
        - Commands
      summary: Get the latest statistics for a given device
      operationId: getDeviceStats
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
        - in: query
          name: startDate
          schema:
            type: string
            # format 2021-03-05T05:27:37Z
            format: 'date-time'
          required: false
        - in: query
          name: endDate
          schema:
            type: string
            # format 2021-03-05T05:27:37Z
            format: 'date-time'
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
        - in: query
          name: limit
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Array of statistics for this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsRecords'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Commands
      summary: Get the latest statistics for a given device
      operationId: getDeviceStats
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
        - in: query
          name: startDate
          schema:
            type: string
            format: 'date-time'
          required: false
        - in: query
          name: endDate
          schema:
            type: string
            format: 'date-time'

      responses:
        200:
          description: Array of statistics for this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericGoodAnswer'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'

  /device/{serialNumber}/status:
    get:
      tags:
        - Commands
      summary: Get the latest status for a given device
      operationId: getDeviceStatus
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      responses:
        200:
          description: Status for the given device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
        404:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotFound'


  /device/{serialNumber}/command:
    post:
      tags:
        - Commands
      summary: Post a command to a device
      operationId: executeCommand
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      requestBody:
        description: Command details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandDetails'
      responses:
        200:
          description: Successful command execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResults'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /device/{serialNumber}/configure:
    post:
      tags:
        - Commands
      summary: Configura a device
      operationId: updateConfigurationForADevice
      parameters:
        - in: path
          name: serialNumber
          schema:
            type: string
          required: true
      requestBody:
        description: Command details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigureRequest'
      responses:
        200:
          $ref: '#/components/responses/Success'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'


