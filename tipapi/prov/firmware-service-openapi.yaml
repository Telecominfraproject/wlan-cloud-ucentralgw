openapi: 3.0.3
info:
  title: CloudSDK Firmware API
  description: APIs that provide services for viewing, updating and deleting various data elements of firmware.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
- name: Firmware Data
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Objects related to Firmware Management
#
      
    FirmwareVersion:
      properties:
        id:
          type: integer
          format: int64
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        modelId:
          type: string
          description: equipment model
        versionName:
          type: string
        description:
          type: string
        filename:
          type: string
        commit:
          type: string
          description: commit number for the firmware image, from the source control system
        validationMethod:
          $ref: '#/components/schemas/FirmwareValidationMethod'
        validationCode:
          type: string
          description: firmware digest code, depending on validation method - MD5, etc.
        releaseDate:
          type: integer
          format: int64
          description: release date of the firmware image, in ms epoch time
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64

    FirmwareValidationMethod:
      type: string
      enum:
      - MD5_CHECKSUM
    
    FirmwareTrackRecord:
      properties:
        recordId:
          type: integer
          format: int32
        trackName:
          type: string
        maintenanceWindow:
          $ref: '#/components/schemas/FirmwareScheduleSetting'
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64

    FirmwareTrackAssignmentRecord:
      properties:
        trackRecordId:
          type: integer
          format: int64
        firmwareVersionRecordId:
          type: integer
          format: int64
        defaultRevisionForTrack:
          type: boolean
          default: false
        deprecated:
          type: boolean
          default: false
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64

    
    FirmwareTrackAssignmentDetails:
      allOf:
      - $ref: '#/components/schemas/FirmwareTrackAssignmentRecord'
      required:
      - model_type
      - trackRecordId
      - firmwareVersionRecordId
      - defaultRevisionForTrack
      - deprecated
      - lastModifiedTimestamp
      properties:
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        modelId:
          type: string
          description: equipment model
        versionName:
          type: string
        description:
          type: string
        commit:
          type: string
          description: commit number for the firmware image, from the source control system
        releaseDate:
          type: integer
          format: int64
          description: release date of the firmware image, in ms epoch time
        
    CustomerFirmwareTrackSettings:
      properties:
        autoUpgradeDeprecatedOnBind:
          $ref: '#/components/schemas/TrackFlag'
        autoUpgradeUnknownOnBind:
          $ref: '#/components/schemas/TrackFlag'
        autoUpgradeDeprecatedDuringMaintenance:
          $ref: '#/components/schemas/TrackFlag'
        autoUpgradeUnknownDuringMaintenance:
          $ref: '#/components/schemas/TrackFlag'

        
    TrackFlag:
      type: string
      default: DEFAULT
      enum:
      - ALWAYS
      - NEVER
      - DEFAULT

    CustomerFirmwareTrackRecord:
      properties:
        customerId:
          type: integer
          format: int32
        trackRecordId:
          type: integer
          format: int64
        settings:
          $ref: '#/components/schemas/CustomerFirmwareTrackSettings'
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64         
          
#
# Related Objects
#
    EquipmentType:
      type: string
      enum:
        - AP
        - SWITCH
        
    FirmwareScheduleSetting:
      oneOf:
      - $ref: '#/components/schemas/DailyTimeRangeSchedule'
      - $ref: '#/components/schemas/EmptySchedule'
      discriminator:
        propertyName: model_type
      example:
        model_type: EmptySchedule
        timezone: "US/Eastern"
  
    DailyTimeRangeSchedule:
      type: object
      properties:
        timezone:
          type: string
        timeBegin:
          $ref: '#/components/schemas/LocalTimeValue'
        timeEnd:
          $ref: '#/components/schemas/LocalTimeValue'
      example:
        model_type: DailyTimeRangeSchedule
        timezone: "US/Eastern"
        timeBegin: 
          hour: 22
          minute: 01
        timeEnd: 
          hour: 22
          minute: 30

    EmptySchedule:
      description: This schedule setting will never return any TimeWindows.
      type: object
      properties:
        timezone:
          type: string
      example:
        model_type: EmptySchedule
        timezone: "US/Eastern"
        
    LocalTimeValue:
      type: object
      properties:
        hour:
          type: integer
        minute:
          type: integer
## ---------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
 
  /api/firmware/version:
    post:
      tags:
      - Firmware Data
      summary: Creates new firmware version record
      operationId: createFirmwareVersion
      requestBody:
        description: Firmware version
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareVersion'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareVersion'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Firmware Data
      summary: Get firmware version using firmwareVersionId
      operationId: getFirmwareVersionById
      parameters:
      - name: firmwareVersionId
        in: query
        description: Firmware Version ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareVersion'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Firmware Data
      summary: Updates firmware version record
      operationId: updateFirmwareVersion
      requestBody:
        description: Firmware Version
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareVersion'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareVersion'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Firmware Data
      summary: Deletes firmware version using firmwareVersionId
      operationId: deleteFirmwareVersionById
      parameters:
      - name: firmwareVersionId
        in: query
        description: Firmware Version ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareVersion'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/firmware/version/byName:
    get:
      tags:
      - Firmware Data
      summary: Get firmware version using firmwareVersionName
      operationId: getFirmwareVersionByName
      parameters:
      - name: firmwareVersionName
        in: query
        description: Firmware Version Name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareVersion'
        500: 
          $ref: '#/components/responses/GenericApiError'       
  
  /api/firmware/version/byEquipmentType:
    get:
      tags:
      - Firmware Data
      summary: Get FirmwareVersions filtered by equipmentType and optional equipment model
      operationId: getFirmwareVersionByEquipmentType
      parameters:
      - name: equipmentType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/EquipmentType'
      - name: modelId
        description: optional filter by equipment model, if null - then firmware versions for all the equipment models are returned
        in: query
        required: false
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FirmwareVersion'
        500:
          $ref: '#/components/responses/GenericApiError'

  /api/firmware/model/byEquipmentType:
    get:
      tags:
      - Firmware Data
      summary: Get equipment models from all known firmware versions filtered by equipmentType
      operationId: getFirmwareModelIdsByEquipmentType
      parameters:
      - name: equipmentType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/EquipmentType'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        500:
          $ref: '#/components/responses/GenericApiError'
  
  /api/firmware/track:
    post:
      tags:
      - Firmware Data
      summary: Creates new firmware track record
      operationId: createFirmwareTrackRecord
      requestBody:
        description: Firmware Track Record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareTrackRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Firmware Data
      summary: Get firmware track record using firmwareTrackId
      operationId: getFirmwareTrackRecordById
      parameters:
      - name: firmwareTrackId
        in: query
        description: Firmware Track ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Firmware Data
      summary: Updates firmware track record
      operationId: updateFirmwareTrackRecord
      requestBody:
        description: Firmware Track Record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareTrackRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Firmware Data
      summary: Deletes firmware track record using firmwareTrackId
      operationId: deleteFirmwareTrackRecordById
      parameters:
      - name: firmwareTrackId
        in: query
        description: Firmware Track Record ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/firmware/track/byName:
    get:
      tags:
      - Firmware Data
      summary: Get firmware track record using firmwareTrackName
      operationId: getFirmwareTrackRecordByName
      parameters:
      - name: firmwareTrackName
        in: query
        description: Firmware Track Name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError' 
  
  /api/firmware/trackAssignment:
    get:
      tags:
      - Firmware Data
      summary: Get firmware track assignment details using firmwareTrackName
      operationId: getFirmwareTrackAssignmentDetailsByName
      parameters:
      - name: firmwareTrackName
        in: query
        description: Firmware Track Name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackAssignmentDetails'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Firmware Data
      summary: Updates or creates firmware track assignment details
      operationId: updateFirmwareTrackASsignmentDetails
      requestBody:
        description: Firmware Track Assignment Details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareTrackAssignmentDetails'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackAssignmentDetails'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Firmware Data
      summary: Deletes firmware track assignment details using firmwareTrackId
      operationId: deleterFirmwareTraskASsignmentDetails
      parameters:
      - name: firmwareTrackId
        in: query
        description: Firmware Track Record ID
        required: true
        schema:
          type: integer
          format: int64
      - name: firmwareVersionId
        in: query
        description: Firmware Version ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareTrackAssignmentDetails'
        500: 
          $ref: '#/components/responses/GenericApiError'
  /api/firmware/customerTrack/default:
    get:
      tags:
      - Firmware Data
      summary: Get customer firmware track settings
      operationId: getCustomerFirmwareTrackSettings
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFirmwareTrackSettings'
        500: 
          $ref: '#/components/responses/GenericApiError' 
  
  /api/firmware/customerTrack:
    post:
      tags:
      - Firmware Data
      summary: Creates new customer firmware track record
      operationId: createCustomerFirmwareTrackRecord
      requestBody:
        description: Customer Track Record 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFirmwareTrackRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Firmware Data
      summary: Get customer firmware track record using customerId
      operationId: getCustomerFirmwareTrackRecord
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Firmware Data
      summary: Updates customer firmware track record
      operationId: updateCustomerFirmwareTrackRecord
      requestBody:
        description: Firmware Version
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFirmwareTrackRecord'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFirmwareTrackRecord'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Firmware Data
      summary: Deletes customer firmware track record
      operationId: deleteCustomerFirmwareTrackRecord
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFirmwareTrackRecord'

