openapi: 3.0.3
info:
  title: CloudSDK Customer API
  description: APIs that provide services for viewing, updating and deleting various data elements of customers.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
  description: | 
    This is a description.
- name: Customer Data
  description: |
    This is another description.
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Customer data models
#

    Customer:
      description: Customer object
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
          format: email
        name:
          type: string
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64
          
#
# Related Objects
#

    CustomerPair:
      type: object
      properties:
        intVal:
          type: integer
          format: int32
        stringVal:
          type: string
    
## ---------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
 
  /api/customer:
    post:
      tags:
      - Customer Data
      summary: Creates new customer record
      operationId: createCustomer
      requestBody:
        description: Customer info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Customer Data
      summary: Updates customer record
      operationId: updateCustomer
      requestBody:
        description: Customer info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Customer Data
      summary: Deletes profile using customerId
      operationId: deleteCustomerById
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Customer Data
      summary: Get profile using customerId
      operationId: getCustomerById
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/customer/orNull:
    get:
      tags:
      - Customer Data
      summary: Retrieves customer record by customer id or returns null if does not exist
      operationId: getCustomerByIdOrNull
      parameters:
      - name: customerId
        in: query
        description: Customer ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/customer/inSet:
    get:
      tags:
      - Customer Data
      summary: Retrieves customers within a specified set
      operationId: getCustomersBySet
      parameters:
      - name: customerIdSet
        in: query
        description: Set of customer IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/customer/find:
    get:
      tags:
      - Customer Data
      summary: Retrieves customers within a specified criteria
      operationId: getCustomersByCriteria
      parameters:
      - name: criteria
        in: query
        description: Criteria
        required: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: Maximum Results
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/customer/all:
    get:
      tags:
      - Customer Data
      summary: Retrieves batch of pairs<customerId, customerName>, sorted by customerId. Batch starts after continueAfterCustomerId
      operationId: getAllCustomers
      parameters:
      - name: batchSize
        in: query
        description: Batch Size
        required: true
        schema:
          type: integer
          format: int64
      - name: continueAfterCustomerId
        in: query
        description: Batch starts after the id specified by continueAfterCustomerId
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPair'
        500: 
          $ref: '#/components/responses/GenericApiError'





