openapi: 3.0.3
info:
  title: CloudSDK Profile API
  description: APIs that provide services for viewing, updating and deleting various data elements of profiles.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
- name: Profile Data
  
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Service Profile data models
#
    ProfileType:
      type: string
      enum:
        - equipment_ap
        - equipment_switch
        - ssid
        - bonjour
        - radius
        - captive_portal
        - mesh
        - service_metrics_collection_config
        - rf
        - passpoint
        - passpoint_operator
        - passpoint_venue
        - passpoint_osu_id_provider

    Profile:
      description: Each AccessPoint refers to at most one profile of type equipment_ap. Each ApNetworkConfiguration (equipment_ap) profile refers to 0-N SSID profiles, 0-1 Metrics Profile. Each SSID profile refers to 0-N Passpoint Profiles (for authenticated SSIDs), 0-1 Radius Profiles for RadiusService, and RadiusAccountingService (both as child profile Id, and attributes in profile details), and at most 1 Captive Portal Profile and 1 Bonjour Gateway Profile via its childProfileIds property. Each Captive Portal Profile refers to at most 1 RADIUS Service Profile via its childProfileIds property. Each Passpoint Profile refers to 0-N Id Provider Profiles, 1 Operator Profile, and 1 Venue Profile, via its childProfileIds property.
      type: object
      properties:
        id:
          type: integer
          format: int64
        profileType:
          $ref: '#/components/schemas/ProfileType'
        customerId:
          type: integer
          format: int32
        name:
          type: string
        childProfileIds:
          type: array
          items:
            type: integer
            format: int64
        details:
           $ref: '#/components/schemas/ProfileDetailsChildren'
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64
      example:
        profileType: equipment_ap
        customerId: 2
        name: example AP profile

    ProfileDetails:
      description: Place to put extended profile properties specific to each type of the profile.
      type: object
      discriminator:
        propertyName: model_type
      properties:
        model_type:
          type: string
          enum:
          - BonjourGatewayProfile
          - CaptivePortalConfiguration
          - ApNetworkConfiguration
          - MeshGroup
          - RadiusProfile
          - SsidConfiguration
          - ServiceMetricsCollectionConfigProfile
          - RfConfiguration
          - PasspointProfile
          - PasspointOperatorProfile
          - PasspointVenueProfile
          - PasspointOsuProviderProfile
      required: 
        - model_type
     
    ProfileDetailsChildren:
      oneOf:
        - $ref: '#/components/schemas/BonjourGatewayProfile'
        - $ref: '#/components/schemas/CaptivePortalConfiguration'
        - $ref: '#/components/schemas/ApNetworkConfiguration'
        - $ref: '#/components/schemas/MeshGroup'
        - $ref: '#/components/schemas/RadiusProfile'
        - $ref: '#/components/schemas/SsidConfiguration'
        - $ref: '#/components/schemas/ServiceMetricsCollectionConfigProfile'
        - $ref: '#/components/schemas/RfConfiguration'
        - $ref: '#/components/schemas/PasspointProfile'
        - $ref: '#/components/schemas/PasspointOperatorProfile'
        - $ref: '#/components/schemas/PasspointVenueProfile'
        - $ref: '#/components/schemas/PasspointOsuProviderProfile'
      discriminator:
        propertyName: model_type
        
    BonjourGatewayProfile:
      description: Properties for the Bonjour Gateway profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - BonjourGatewayProfile
          profileDescription:
            type: string
          bonjourServices:
            type: array
            items:
              $ref: '#/components/schemas/BonjourServiceSet'

    BonjourServiceSet:
      type: object
      properties:
        vlanId:
          type: integer
          format: int16
        supportAllServices:
          type: boolean
        serviceNames:
          type: array
          items:
            type: string
            
    CaptivePortalConfiguration:
      description: Properties for the Captive Portal Service profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - CaptivePortalConfiguration
          browserTitle:
            type: string
          headerContent:
            type: string
          userAcceptancePolicy:
            type: string
          successPageMarkdownText:          
            type: string
          redirectURL:
            type: string
          externalCaptivePortalURL:
            type: string
          sessionTimeoutInMinutes:
            type: integer
            format: int32
          logoFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          backgroundFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          walledGardenAllowlist:
            type: array
            items:
              type: string
          usernamePasswordFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          authenticationType:
            $ref: '#/components/schemas/CaptivePortalAuthenticationType'
          radiusAuthMethod:
            $ref: '#/components/schemas/RadiusAuthenticationMethod'
          maxUsersWithSameCredentials:
            type: integer
            format: int32
          externalPolicyFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          backgroundPosition:
            $ref: '#/components/schemas/BackgroundPosition'
          backgroundRepeat:
            $ref: '#/components/schemas/BackgroundRepeat'
          radiusServiceId:
            type: integer
            format: int64
          expiryType:
            $ref: '#/components/schemas/SessionExpiryType'
          userList:
            type: array
            items:
              $ref: '#/components/schemas/TimedAccessUserRecord'
          macAllowList:
            type: array
            items:
              $ref: '#/components/schemas/MacAllowlistRecord'

    ManagedFileInfo:
      type: object
      properties:
        md5checksum:
          type: array
          items:
            type: integer
            format: byte
        lastModifiedTimestamp:
          type: integer
          format: int64
        apExportUrl:
          type: string
        fileCategory:
          $ref: '#/components/schemas/FileCategory'
        fileType:
          $ref: '#/components/schemas/FileType'
        altSlot:
          type: boolean
          
    FileCategory:
      type: string
      enum:
      - CaptivePortalLogo
      - CaptivePortalBackground
      - ExternalPolicyConfiguration
      - UsernamePasswordList
      - DeviceMacBlockList
      - DoNotSteerClientList
      - RadSecAuthentication
 
    FileType:
      type: string
      enum:
      - PNG
      - JPG
      - PROTOBUF
      - PEM
      - KEY
      
    CaptivePortalAuthenticationType:
      type: string
      enum:
      - guest
      - username
      - radius
      - external

    RadiusAuthenticationMethod:
      type: string
      enum:
      - PAP
      - CHAP
      - MSCHAPv2

    BackgroundPosition:
      type: string
      enum:
      - left_top
      - left_center
      - left_bottom
      - right_top
      - right_center
      - right_bottom
      - center_top
      - center_center
      - center_bottom

    BackgroundRepeat:
      type: string
      enum:
      - repeat_x
      - repeat_y
      - repeat
      - space
      - round
      - no_repeat
      - cover
    
    SessionExpiryType:
      type: string
      enum:
      - time_limited
      - unlimited

    TimedAccessUserRecord:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        activationTime:
          type: integer
          format: int64
        expirationTime:
          type: integer
          format: int64
        numDevices:
          type: integer
          format: int32
        userDetails:
          $ref: '#/components/schemas/TimedAccessUserDetails'
        userMacAddresses:
          type: array
          items:
            $ref: '#/components/schemas/MacAddress'
        lastModifiedTimestamp:
          type: integer
          format: int64
    
    TimedAccessUserDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        passwordNeedsReset:
          type: boolean
          
    MacAddress:
      type: object
      properties:
        addressAsString:
          type: string
      
    MacAllowlistRecord:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        notes:
          type: string
        lastModifiedTimestamp:
          type: integer
          format: int64
      

    ApNetworkConfiguration:
      description: Properties for the AP Network Configuration profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - ApNetworkConfiguration
          networkConfigVersion:
            type: string
            enum:
            - AP-1
          equipmentType:
            type: string
            enum:
            - AP
          vlanNative:
            type: boolean
          vlan:
            type: integer
            format: int32
          ntpServer:
            allOf:
            - $ref: '#/components/schemas/AutoOrManualString'
            - type: object
            properties:
              auto:
                type: boolean
              value:
                type: string
                default: "pool.ntp.org"
          syslogRelay:
            $ref: '#/components/schemas/SyslogRelay'
          rtlsSettings:
            $ref: '#/components/schemas/RtlsSettings'
          syntheticClientEnabled:
            type: boolean
          ledControlEnabled:
            type: boolean
          equipmentDiscovery:
            type: boolean
          greTunnelConfigurations:
            type: array
            items:
              $ref: '#/components/schemas/GreTunnelConfiguration'  
          radiusProxyConfigurations:
            type: array
            items:
              $ref: '#/components/schemas/RadiusProxyConfiguration'              
          radioMap:
            $ref: '#/components/schemas/RadioProfileConfigurationMap'

    GreTunnelConfiguration:
      properties:
        greTunnelName:
          type: string
        greRemoteInetAddr:
          type: string
        vlanIdsInGreTunnel:
          type: array
          items: 
            type: integer
            format: int32   
      example:
        greTunnelName: gre1
        greRemoteInetAddr: 192.168.1.101
        vlanIdsInGreTunnel:
        - 100

    RadiusProxyConfiguration:
      properties:
        caCert:
          $ref: '#/components/schemas/ManagedFileInfo'
        clientCert:
          $ref: '#/components/schemas/ManagedFileInfo'
        clientKey:
          $ref: '#/components/schemas/ManagedFileInfo'
        server:
          type: string
        port:
          type: integer
          format: int32
        realm:
          type: array
          items:
            type: string 
        name:
          type: string
        passphrase:
          type: string
          format: password
        useRadSec:
          type: boolean
      example:
        model_type: RadiusProxyConfiguration
        caCert:
          model_type: ManagedFileInfo
          md5checksum: null
          lastModifiedTimestamp: null
          apExportUrl: /filestore/cacert.pem
          fileCategory: RadSecAuthentication
          fileType: PEM
          altSlot: false
        clientCert:
          model_type: ManagedFileInfo
          md5checksum: null
          lastModifiedTimestamp: null
          apExportUrl: /filestore/clientcert.pem
          fileCategory: RadSecAuthentication
          fileType: PEM
          altSlot: false
        clientKey:
          model_type: ManagedFileInfo
          md5checksum: null
          lastModifiedTimestamp: null
          apExportUrl: /filestore/client_dec.key
          fileCategory: RadSecAuthentication
          fileType: KEY
          altSlot: false
        server: 41.152.82.115
        port: 1812
        realm:
          - lawson.name
          - stephan.com
          - dulce.info
        name: eyeballs
        passphrase: PmmHmtxep8S1sPl
        useRadSec: false
                    
    RadioProfileConfigurationMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is5GHzU:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is5GHzL:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is2dot4GHz:
          $ref: '#/components/schemas/RadioProfileConfiguration'

    RadioProfileConfiguration:
      properties:
        bestApEnabled:
          type: boolean
        bestAPSteerType:
          $ref: '#/components/schemas/BestAPSteerType'

    SyslogRelay:
      type: object
      properties:
        enabled:
          type: boolean
        srvHostIp:
          type: string
        srvHostPort:
          type: integer
          format: int32
        severity:
          $ref: '#/components/schemas/SyslogSeverityType'
    
    
    SyslogSeverityType:
      type: string
      enum:
      - EMERG
      - ALERT
      - CRIT
      - ERR
      - WARING
      - NOTICE
      - INFO
      - DEBUG

    RtlsSettings:
      type: object
      properties:
        enabled:
          type: boolean
        srvHostIp:
          type: string
        srvHostPort:
          type: integer
          format: int32
      
    
    MeshGroup:
      description: Properties for the Mesh Group profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - MeshGroup
          property:
            $ref: '#/components/schemas/MeshGroupProperty'
          members:
            type: array
            items:
              $ref: '#/components/schemas/MeshGroupMember'
              
    MeshGroupProperty:
      properties:
        name:
          type: string
        locationId:
          type: integer
          format: int64
        ethernetProtection:
          type: boolean

    MeshGroupMember:
      properties:
        mashMode:
          $ref: '#/components/schemas/ApMeshMode'
        equipmentId:
          type: integer
          format: int64
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          type: integer
          format: int64

    ApMeshMode:
      description: STANDALONE = no mesh. MESH_PORTAL = Wired AP, accepting wireless connections from MESH_POINTs. MESH_POINT = Extender AP. connects to MESH_PORTAL.
      type: string
      enum:
      - STANDALONE
      - MESH_PORTAL
      - MESH_POINT

    RadiusProfile:
      description: Properties for the RADIUS profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
      - required:
         - primaryRadiusAuthServer
        properties:
          model_type:
            type: string
            enum:
            - RadiusProfile
          primaryRadiusAuthServer:
            allOf:
                - description: the primary radius auth server
                - $ref: '#/components/schemas/RadiusServer'
          secondaryRadiusAuthServer:
            allOf:
                - description: the secondary radius auth server, currently the AP supports only 1 radius auth server and 1 radius accounting server, so this is not provisioned on the AP
                - $ref: '#/components/schemas/RadiusServer'
          primaryRadiusAccountingServer:
            allOf:
                - description: the primary radius accounting server
                - $ref: '#/components/schemas/RadiusServer'
          secondaryRadiusAccountingServer:
            allOf:
                - description: the secondary radius accounting server, currently the AP supports only 1 radius auth server and 1 radius accounting server, so this is not provisioned on the AP
                - $ref: '#/components/schemas/RadiusServer'            
      example:
        primaryRadiusAuthServer:
          model_type: RadiusServer
          ipAddress: 127.0.0.1
          secret: secret
          port: 1812
          timeout: 5
                    
    RadiusServer:
      properties:
        ipAddress:
          type: string
        secret:
          type: string
        port:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
      example:
          model_type: RadiusServer
          ipAddress: 127.0.0.1
          secret: secret
          port: 1812
          timeout: 5
        
    MimoMode:
      type: string
      enum:
        - none
        - oneByOne
        - twoByTwo
        - threeByThree
        - fourByFour
        
    MulticastRate:
      type: string
      enum:
        - auto
        - rate6mbps
        - rate9mbps
        - rate12mbps
        - rate18mbps
        - rate24mbps
        - rate36mbps
        - rate48mbps
        - rate54mbps
        
    ActiveScanSettings:
      type: object
      properties:
        enabled:
          type: boolean
        scanFrequencySeconds:
          type: integer
          format: int32
        scanDurationMillis:
          type: integer
          format: int32
      
    ManagementRate:
      type: string
      enum:
        - auto
        - rate1mbps
        - rate2mbps
        - rate5dot5mbps
        - rate6mbps
        - rate9mbps
        - rate11mbps
        - rate12mbps
        - rate18mbps
        - rate24mbps
          
    ChannelBandwidth:
      description: On 2.4GHz radio only auto or is20MHz values can be used. On 5GHz radio all values can be used. 
      type: string
      enum:
        - auto
        - is20MHz
        - is40MHz
        - is80MHz
        - is160MHz
        
    ObssHopMode:
      type: string
      enum:
        - NON_WIFI
        - NON_WIFI_AND_OBSS
      default: NON_WIFI
        
    RadioBestApSettings:
      description: If mlComputed=true, then dropInSnrPercentage and minLoadFactor properties are populated by ML algorithms. If  mlComputed=false, then those values are supposed to be populated by hand (ML-computed ones will be ignored).
      type: object
      properties:
        mlComputed:
          type: boolean
          default: true
        dropInSnrPercentage:
          type: integer
          format: int32
          default: 10
        minLoadFactor:
          type: integer
          format: int32
          default: 10
          
    ChannelHopSettings:
      description: If noise floor (avg over 4 measurements, measurement interval being 1 sec.) is above -75 dB for more than 3 minutes OR
        If Non WiFi utilization is more than 50% for more than 3 minutes channel will be changed.
      type: object
      properties:
        noiseFloorThresholdInDB:
          type: integer
          format: int32
          default: -75
        noiseFloorThresholdTimeInSeconds:
          type: integer
          format: int32
          default: 180
        nonWifiThresholdInPercentage:
          type: integer
          format: int32
          default: 50
        nonWifiThresholdTimeInSeconds:
          type: integer
          format: int32
          default: 180
        obssHopMode:
          $ref: '#/components/schemas/ObssHopMode'
    
    NeighbouringAPListConfiguration:
      type: object
      properties:
        minSignal:
          type: integer
          format: int32
        maxAps:
          type: integer
          format: int32
          
    RadioMode:
      type: string
      enum:
        - modeN
        - modeAC
        - modeGN
        - modeAX
        - modeA
        - modeB
        - modeG
        - modeAB
        
    RfConfiguration:
      description: Properties for the RF ConfigurationProfile
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          rfConfigMap:
            $ref: '#/components/schemas/RfConfigMap'
    
    RfConfigMap:
      properties:
        is2dot4GHz:
          $ref: '#/components/schemas/RfElementConfiguration'
        is5GHz:
          $ref: '#/components/schemas/RfElementConfiguration'
        is5GHzU:
          $ref: '#/components/schemas/RfElementConfiguration'
        is5GHzL:
          $ref: '#/components/schemas/RfElementConfiguration'
    
    RfElementConfiguration:
      properties:
        model_type:
          type: string
          enum:
          - RfElementConfiguration
        rf:
          type: string
        radioType:
          $ref: '#/components/schemas/RadioType'
        radioMode:
          $ref: '#/components/schemas/RadioMode'
        autoChannelSelection:
          type: boolean
        beaconInterval:
          type: integer
          format: int32
        forceScanDuringVoice:
          $ref: '#/components/schemas/StateSetting'
        rtsCtsThreshold:
          type: integer
          format: int32
        channelBandwidth:
          $ref: '#/components/schemas/ChannelBandwidth'
        mimoMode:
          $ref: '#/components/schemas/MimoMode'
        maxNumClients:
          type: integer
          format: int32
        multicastRate:
          $ref: '#/components/schemas/MulticastRate'
        activeScanSettings:
          $ref: '#/components/schemas/ActiveScanSettings'
        managementRate:
          $ref: '#/components/schemas/ManagementRate'
        rxCellSizeDb:
          type: integer
          format: int32
        probeResponseThresholdDb:
          type: integer
          format: int32
        clientDisconnectThresholdDb:
          type: integer
          format: int32
        eirpTxPower:
          type: integer
          format: int32
          minimum: 1
          maximum: 32
          default: 18
        bestApEnabled:
          type: boolean
        neighbouringListApConfig:
          $ref: '#/components/schemas/NeighbouringAPListConfiguration'
        minAutoCellSize:
          type: integer
          format: int32
        perimeterDetectionEnabled:
          type: boolean
        channelHopSettings:
          $ref: '#/components/schemas/ChannelHopSettings'
        bestApSettings:
          $ref: '#/components/schemas/RadioBestApSettings'        

    SsidConfiguration:
      description: Properties for the SSID Configuration profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - SsidConfiguration
          ssid:
            type: string
          appliedRadios:
            type: array
            items:
              $ref: '#/components/schemas/RadioType'
          ssidAdminState:
            $ref: '#/components/schemas/StateSetting'
          secureMode:
            $ref: '#/components/schemas/SsidSecureMode'
          vlanId:
            type: integer
            format: int32
          dynamicVlan:
            $ref: '#/components/schemas/DynamicVlanMode'
          keyStr:
            type: string
          broadcastSsid:
            $ref: '#/components/schemas/StateSetting'
          keyRefresh:
            type: integer
            format: int32
            default: 0
          noLocalSubnets:
            type: boolean
          radiusServiceId:
            type: integer
            format: int64
          radiusAcountingServiceInterval:
            description: If this is set between 60-600, RadiusAccountingService is configured, and SsidSecureMode is configured as Enterprise/Radius, ap will send interim accounting updates every N seconds, if it is set to 0, Radius determines the interval
            type: integer
            format: int32
            minimum: 0
            maximum: 600
            default: 0
          radiusNasConfiguration:
            $ref: '#/components/schemas/RadiusNasConfiguration'            
          captivePortalId:
            description: id of a CaptivePortalConfiguration profile, must be also added to the children of this profile
            type: integer
            format: int64
          bandwidthLimitDown:
            type: integer
            format: int64
          bandwidthLimitUp:
            type: integer
            format: int64
          clientBandwidthLimitDown:
            type: integer
            format: int64
          clientBandwidthLimitUp:
            type: integer
            format: int64
          videoTrafficOnly:
            type: boolean
          radioBasedConfigs:
            $ref: '#/components/schemas/RadioBasedSsidConfigurationMap'
          bonjourGatewayProfileId:
            description: id of a BonjourGateway profile, must be also added to the children of this profile
            type: integer
            format: int64
          enable80211w:
            type: boolean
          useRadSec:
            type: boolean
            default: false            
          useRadiusProxy:
            type: boolean
            default: false
          wepConfig:
            $ref: '#/components/schemas/WepConfiguration'
          forwardMode:
            $ref: '#/components/schemas/NetworkForwardMode'

    DynamicVlanMode:
      description: Dynamic Vlan Setting for Bridge Mode Radius Authentication, can only be enabled for Bridged Mode Radius Authentication. Otherwise disabled. Qualified enabled option specifies that Radius Authentication is rejected if Dynamic Vlan is not given by the Radius.
      type: string
      enum:
      - disabled
      - enabled
      - enabled_reject_if_no_radius_dynamic_vlan
      default: disabled
            
    SsidSecureMode:
      type: string
      description: security mode (open, personal, enterprise) for SsidConfiguration. Radius and EAP modes are functionally equivalent, it may be prudent to remove on at a later date
      enum:
      - open
      - wpaPSK
      - wpa2PSK
      - wpaRadius
      - wpa2Radius
      - wpa2OnlyPSK
      - wpa2OnlyRadius
      - wep
      - wpaEAP
      - wpa2EAP
      - wpa2OnlyEAP
      - wpa3OnlySAE
      - wpa3MixedSAE
      - wpa3OnlyEAP
      - wpa3MixedEAP
      
    RadioBasedSsidConfigurationMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is5GHzU:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is5GHzL:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is2dot4GHz:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
      
    RadioBasedSsidConfiguration:
      properties:
        enable80211r:
          type: boolean
        enable80211k:
          type: boolean
        enable80211v:
          type: boolean
          
    WepConfiguration:
      properties:
        primaryTxKeyId:
          type: integer
          format: int32
        wepKeys:
          type: array
          items:
            $ref: '#/components/schemas/WepKey'
        wepAuthType:
          $ref: '#/components/schemas/WepAuthType'
          
    WepAuthType:
      type: string
      enum:
      - open
      - shared
    
    WepKey:
      properties:
        txKey:
          type: string
        txKeyConverted:
          type: string
        txKeyType:
          $ref: '#/components/schemas/WepType'
        
    WepType:
      type: string
      enum:
      - wep64
      - wep128

    RadiusNasConfiguration:
      properties:
        nasClientId: 
          description: String identifying the NAS (AP) – Default shall be set to the AP BASE MAC Address for the WAN Interface
          type: string
          enum:
          - DEFAULT
          - USER_DEFINED
          default: DEFAULT
        nasClientIp:
          description:  NAS-IP AVP - Default it shall be the WAN IP address of the AP when AP communicates with RADIUS server directly.
          type: string
          enum:
          - USER_DEFINED
          - WAN_IP
          - PROXY_IP
          default: WAN_IP
        userDefinedNasId:
          description: user entered string if the nasClientId is 'USER_DEFINED'. This should not be enabled and will not be passed to the AP unless the nasClientId is USER_DEFINED.
          type: string
        userDefinedNasIp:
          description: user entered IP address if the nasClientIp is 'USER_DEFINED'.  This should not be enabled and will not be passed to the AP unless the nasClientIp is USER_DEFINED.
          type: string
        operatorId:
          description: Carries the operator namespace identifier and the operator name.  The operator name is combined with the namespace identifier to uniquely identify the owner of an access network.  The value of the Operator-Name is a non-NULL terminated text. This is not to be confused with the Passpoint Operator Domain
          type: string

    ServiceMetricsCollectionConfigProfile:
      description: Properties for the id_provider profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - ServiceMetricsCollectionConfigProfile
          radioTypes:
            type: array
            items:
              $ref: '#/components/schemas/RadioType'  
          serviceMetricDataTypes:
            type: array
            items:
              $ref: '#/components/schemas/ServiceMetricDataType'  
          metricConfigParameterMap:
            $ref: '#/components/schemas/MetricConfigParameterMap'

    MetricConfigParameterMap:
      properties:
        ApNode:
          $ref: '#/components/schemas/ServiceMetricSurveyConfigParameters'
        ApSsid:
          $ref: '#/components/schemas/ServiceMetricRadioConfigParameters'
        Client:
          $ref: '#/components/schemas/ServiceMetricRadioConfigParameters'
        Channel:
          $ref: '#/components/schemas/ServiceMetricSurveyConfigParameters'
        Neighbour:
          $ref: '#/components/schemas/ServiceMetricSurveyConfigParameters'
        QoE:
          $ref: '#/components/schemas/ServiceMetricConfigParameters'
        ClientQoE:
          $ref: '#/components/schemas/ServiceMetricConfigParameters'
    
    ServiceMetricConfigParameters:
      properties:
        samplingInterval:
          type: integer
          format: int32
        reportingIntervalSeconds:
          type: integer
          format: int32
        serviceMetricDataType:
          $ref: '#/components/schemas/ServiceMetricDataType' 

    ServiceMetricSurveyConfigParameters:
      properties:
        samplingInterval:
          type: integer
          format: int32
        reportingIntervalSeconds:
          type: integer
          format: int32    
        serviceMetricDataType:
          $ref: '#/components/schemas/ServiceMetricDataType' 
        radioType:
          $ref: '#/components/schemas/RadioType'   
    
    ServiceMetricRadioConfigParameters:
      properties:
        samplingInterval:
          type: integer
          format: int32
        reportingIntervalSeconds:
          type: integer
          format: int32   
        serviceMetricDataType:
          $ref: '#/components/schemas/ServiceMetricDataType'
        radioType:
          $ref: '#/components/schemas/RadioType'   
        channelSurveyType:
          $ref: '#/components/schemas/ChannelUtilizationSurveyType'
        scanIntervalMillis:
          type: integer
          format: int32   
        percentUtilizationThreshold:
          type: integer
          format: int32   
        delayMillisecondsThreshold:
          type: integer
          format: int32   
        statsReportFormat:        
          $ref: '#/components/schemas/StatsReportFormat'

    ChannelUtilizationSurveyType:
      description:  On channel Measurements are on the home channel and can be done frequently and periodically without user impact. Off channel measurements are on the listed foreign channels​periodically chosen using round robin fashion (“1,6,11” -> t0=1, t1=6, t2=11, t3=1) to minimize user impact. Full measurements are done on all allowed channels at once, this is very intrusive.
      type: string
      enum:
        - ON_CHANNEL
        - OFF_CHANNEL
        - FULL

    StatsReportFormat:
      type: string
      enum:
        - RAW
        - PERCENTILE
        - AVERAGE
      
    PasspointOsuProviderProfile:
      description: Properties for the id_provider profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - PasspointOsuProviderProfile
          PasspointMccMncList:
            type: array
            items:
              $ref: '#/components/schemas/PasspointMccMnc'
          naiRealmList:
            type: array
            items:
              $ref: '#/components/schemas/PasspointNaiRealmInformation'
          PasspointOsuIconList:
            type: array
            items:
              $ref: '#/components/schemas/PasspointOsuIcon'
          osuSsid:
            type: string
          osuServerUri:
            type: string
          radiusProfileAuth:
            type: string
          radiusProfileAccounting:
            type: string
          osuFriendlyName:
            type: array
            items:
              $ref: '#/components/schemas/PasspointDuple'
            example:
              model_type: PasspointDuple
              locale: en_CA
              dupleIso3Language: eng
              dupleName: Example provider rogers
              defaultDupleSeparator: ':'
              asDuple: 'eng:Example provider rogers'    
          osuNaiStandalone:
            type: string
          osuNaiShared:
            type: string
          osuMethodList:
            type: integer
            format: int32
          osuServiceDescription:
            type: array
            items:
              $ref: '#/components/schemas/PasspointDuple'
            example:
              model_type: PasspointDuple
              locale: en_CA
              dupleIso3Language: eng
              dupleName: Example services rogers
              defaultDupleSeparator: ':'
              asDuple: 'eng:Example services rogers'
          roamingOi:
            type: array
            items:
              type: string
            example:
              roamingOi:
              - BAA2D00100
              - BAA2D00000
              - F4F5E8F5F4
              - '005014'
              - '004096'               
   
    PasspointMccMnc:
      description: pair of mobile country code and mobile network code values 
      type: object
      properties:
        mcc:
          type: integer
          format: int32
        mnc:
          type: integer
          format: int32
        iso:
          type: string
        country: 
          type: string
        countryCode:
          type: integer
          format: int32
        network:
          type: string
      example:
        model_type: PasspointMccMnc
        mcc: 302
        mnc: 720
        iso: ca
        country: Canada
        countryCode: 1
        network: Rogers AT&T Wireless
        mccMncPairing: '302,720'  

    PasspointNaiRealmInformation:     
      description: encoded 
      type: object
      properties:
        naiRealms:
          type: array
          items:
            type: string
        encoding:
          allOf:
            - description: value of PasspointNaiRealmEncoding
            - $ref: '#/components/schemas/PasspointNaiRealmEncoding'
            - discriminator:
                 propertyName: id
        eapMethods:
          description: array of EAP methods
          type: array
          items:
            $ref: '#/components/schemas/PasspointEapMethods' 
        eapMap:
          description: map of string values comrised of 'param + credential' types, keyed by EAP methods
          example: 
             EAP-TTLS with username/password:
                - 'Credential Type:username/password'
                - 'Non-EAP Inner Authentication Type:MSCHAPV2'
             EAP-TLS with certificate:
                - 'Credential Type:Certificate'
          type: object
          additionalProperties:
            type: string
      example:
           model_type: PasspointNaiRealmInformation
           naiRealms:
              - rogers.com
           encoding: 0
           eapMethods:
              - EAP-TTLS with username/password
              - EAP-TLS with certificate
           eapMap:
              EAP-TTLS with username/password:
                 - 'Credential Type:username/password'
                 - 'Non-EAP Inner Authentication Type:MSCHAPV2'
              EAP-TLS with certificate:
                 - 'Credential Type:Certificate'

    PasspointEapMethods:
      type: string
      enum:
        - eap_tls
        - eap_ttls
        - eap_aka_authentication
        - eap_mschap_v2
        - eap_aka
        
    PasspointNaiRealmEapAuthInnerNonEap:
      type: string
      enum:
        - NAI_REALM_INNER_NON_EAP_PAP
        - NAI_REALM_INNER_NON_EAP_CHAP
        - NAI_REALM_INNER_NON_EAP_MSCHAP
        - NAI_REALM_INNER_NON_EAP_MSCHAPV2

    PasspointNaiRealmEapAuthParam: 
      type: string
      enum:
       - NAI_REALM_EAP_AUTH_EXPANDED_EAP_METHOD
       - NAI_REALM_EAP_AUTH_NON_EAP_INNER_AUTH
       - NAI_REALM_EAP_AUTH_INNER_AUTH_EAP_METHOD
       - NAI_REALM_EAP_AUTH_EXPANDED_INNER_EAP_METHOD
       - NAI_REALM_EAP_AUTH_CRED_TYPE
       - NAI_REALM_EAP_AUTH_TUNNELED_CRED_TYPE
       - NAI_REALM_EAP_AUTH_VENDOR_SPECIFIC
    
    PasspointNaiRealmEapCredType: 
      type: string
      enum:    
       - NAI_REALM_CRED_TYPE_SIM
       - NAI_REALM_CRED_TYPE_USIM
       - NAI_REALM_CRED_TYPE_NFC_SECURE_ELEMENT
       - NAI_REALM_CRED_TYPE_HARDWARE_TOKEN
       - NAI_REALM_CRED_TYPE_SOFTOKEN
       - NAI_REALM_CRED_TYPE_CERTIFICATE
       - NAI_REALM_CRED_TYPE_USERNAME_PASSWORD
       - NAI_REALM_CRED_TYPE_NONE
       - NAI_REALM_CRED_TYPE_ANONYMOUS
       - NAI_REALM_CRED_TYPE_VENDOR_SPECIFIC

    PasspointNaiRealmEncoding:
      type: string
      enum:    
        - ietf_rfc_4282_encoding
        - utf8_non_ietf_rfc_4282_encoding
                
    PasspointOsuIcon:
      description: properties of icons for osu provider and operator
      type: object
      properties:
        iconWidth:
          type: integer
          format: int32
        iconHeight:
          type: integer
          format: int32
        languageCode:
          type: string
        iconLocale:
          description: The primary locale for this Icon.
          example: en-US
          format: locale
          type: string
        iconName:
          type: string
        filePath:
          type: string
        imageUrl:
          type: string
        ICON_TYPE:
          type: string
          enum:
            - image/png
      example:
        model_type: PasspointOsuIcon
        iconWidth: 32
        iconHeight: 32
        languageCode: eng
        iconLocale: en_CA
        iconName: icon32eng
        filePath: /tmp/icon32eng.png
        imageUrl: 'https://localhost:9096/icon32eng.png'
        hs20IconString: '32:32:eng:image/png:icon32eng:/tmp/icon32eng.png'   
           
    PasspointDuple:
      description: representation of a duple value used to map duples in the passpoint configurations where a lang:string is required, examples of it's use can be found in components which reference it.
      type: object
      properties:
        locale:
          description: The locale for this duple.
          example: en-US
          format: locale
          type: string
        dupleIso3Language:
          description: 3 letter iso language representation based on locale
          type: string
        dupleName:
          type: string
        defaultDupleSeparator:
          description: default separator between the values of a duple, by default it is a ':'
          type: string  
             
    PasspointOperatorProfile:
      description: Properties for the operator profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - PasspointOperatorProfile
          serverOnlyAuthenticatedL2EncryptionNetwork:
            description: OSEN
            type: boolean
          operatorFriendlyName:
            type: array
            items:
              $ref: '#/components/schemas/PasspointDuple'
          domainNameList:
            type: array
            items:
              type: string
          defaultOperatorFriendlyName:
            type: string
          defaultOperatorFriendlyNameFr:
            type: string
      example:
          model_type: PasspointOperatorProfile
          serverOnlyAuthenticatedL2EncryptionNetwork: false
          x509CertificateLocation: "/etc/ca.pem"
          operatorFriendlyName:
          - model_type: PasspointDuple
            locale: en_CA
            dupleIso3Language: eng
            dupleName: Default friendly passpoint_operator name
            defaultDupleSeparator: ":"
            asDuple: eng:Default friendly passpoint_operator name
          - model_type: PasspointDuple
            locale: fr_CA
            dupleIso3Language: fra
            dupleName: Nom de l'opérateur convivial par défaut
            defaultDupleSeparator: ":"
            asDuple: fra:Nom de l'opérateur convivial par défaut
          domainNameList:
          - telus.com
          - bell.ca
          - rogers.com
          profileType: passpoint_operator                  

    PasspointVenueProfile:
      description: Properties for the venue profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - PasspointVenueProfile
          passpointVenueNameSet:
            type: array
            items:
              $ref: '#/components/schemas/PasspointVenueName'
          passpointVenueTypeAssignment:
            type: object
            items:                    
              $ref: '#/components/schemas/PasspointVenueTypeAssignment'

    PasspointVenueName:
       description: PasspointVenueName object.
       type: object
       properties:
         venueUrl:
           type: string
       example:
         model_type: PasspointVenueName
         locale: fr_CA
         dupleIso3Language: fra
         dupleName: Exemple de lieu
         defaultDupleSeparator: ':'
         venueUrl: 'http://www.example.com/info-fra'
         asDuple: 'fra:Exemple de lieu'
               
    PasspointVenueTypeAssignment:
      description: VenueType assignment.
      type: object
      properties: 
        venueDescription:
          type: string
        venueGroupId:
          type: integer
          format: int32
        venueTypeId:
          type: integer
          format: int32
      example:
        model_type: ProfileVenueTypeAssignment
        venueDescription: Research and Development Facility
        venueGroupId: 2
        venueTypeId: 8  
        
    PasspointProfile:
       description: Properties for the PasspointProfile profile.
       allOf:
        - $ref: '#/components/schemas/ProfileDetails'
        - type: object
          properties:
            model_type:
              type: string
              enum:
              - PasspointProfile
            enableInterworkingAndHs20:
              type: boolean
            additionalStepsRequiredForAccess:
              type: integer
              format: int32
            deauthRequestTimeout:
              type: integer
              format: int32
            operatingClass:
              type: integer
              format: int32
            termsAndConditionsFile:
              $ref: '#/components/schemas/ManagedFileInfo'
            whitelistDomain:
              type: string
            emergencyServicesReachable:
              type: boolean
            unauthenticatedEmergencyServiceAccessible:
              type: boolean
            internetConnectivity:
              type: boolean
            ipAddressTypeAvailability:
              oneOf:
                - $ref: '#/components/schemas/PasspointIPv4AddressType'
                - $ref: '#/components/schemas/PasspointIPv6AddressType'
            qosMapSetConfiguration:
              type: array
              items:
                type: string 
            hessid:
              $ref: '#/components/schemas/MacAddress'
            apGeospatialLocation:
              type: string
            apCivicLocation:
              type: string
            anqpDomainId: 
              type: integer
              format: int32
            disableDownstreamGroupAddressedForwarding:
              type: boolean   
            enable2pt4GHz:
              type: boolean               
            enable5GHz:  
              type: boolean   
            associatedAccessSsidProfileIds:
              type: array
              items:
                type: integer
                format: int64
            osuSsidProfileId:
              type: integer
              format: int64
            passpointOperatorProfileId:
              description: Profile Id of a PasspointOperatorProfile profile, must be also added to the children of this profile
              type: integer
              format: int64
            passpointVenueProfileId:
              description: Profile Id of a PasspointVenueProfile profile, must be also added to the children of this profile
              type: integer
              format: int64
            passpointOsuProviderProfileIds:
              description: array containing Profile Ids of PasspointOsuProviderProfiles, must be also added to the children of this profile
              type: array
              items:
                type: integer
                format: int64
            apPublicLocationIdUri:
              format: uri
              type: string     
            accessNetworkType:
              $ref: '#/components/schemas/PasspointAccessNetworkType'
            networkAuthenticationType:
              $ref: '#/components/schemas/PasspointNetworkAuthenticationType'             
            connectionCapabilitySet:
               type: array
               items:
                  $ref: '#/components/schemas/PasspointConnectionCapability'   
            gasAddr3Behaviour:
               $ref: '#/components/schemas/PasspointGasAddress3Behaviour'        

    PasspointIPv4AddressType:
      type: string
      enum:
        - address_type_not_available
        - public_IPv4_address_available
        - port_restricted_IPv4_address_available
        - single_NATed_private_IPv4_address_available
        - double_NATed_private_IPv4_address_available
        - port_restricted_IPv4_address_and_single_NATed_IPv4_address_available
        - port_restricted_IPv4_address_and_double_NATed_IPv4_address_available
        - availability_of_the_address_type_is_unknown

    PasspointIPv6AddressType:
      type: string
      enum:
        - address_type_not_available
        - address_type_available
        - availability_of_the_address_type_is_unknown
           
    PasspointAccessNetworkType:
      type: string
      enum:
        - private_network
        - private_network_guest_access
        - changeable_public_network
        - free_public_network
        - person_device_network
        - emergency_services_only_network
        - test_or_experimental
        - wildcard
        
    PasspointNetworkAuthenticationType:
      type: string
      enum:
        - acceptance_of_terms_and_conditions
        - online_enrollment_supported
        - http_https_redirection
        - dns_redirection
        
    PasspointConnectionCapability:
      description: VenueType assignment.
      type: object
      properties: 
        connectionCapabilitiesPortNumber:
          type: integer
          format: int32
        connectionCapabilitiesIpProtocol:
          $ref: '#/components/schemas/PasspointConnectionCapabilitiesIpProtocol'
        connectionCapabilitiesStatus:
          $ref: '#/components/schemas/PasspointConnectionCapabilitiesStatus'
      example:
        model_type: PasspointConnectionCapability
        connectionCapabilitiesPortNumber: 8888
        connectionCapabilitiesIpProtocol: TCP
        connectionCapabilitiesStatus: open    

    PasspointConnectionCapabilitiesIpProtocol:
      type: string
      enum:
        - ICMP
        - TCP
        - UDP
    
    PasspointConnectionCapabilitiesStatus:
      type: string
      enum:
        - closed
        - open
        - unknown   

    PasspointGasAddress3Behaviour:                
      type: string
      enum:
        - p2pSpecWorkaroundFromRequest
        - ieee80211StandardCompliantOnly
        - forceNonCompliantBehaviourFromRequest      
    
#
# Objects related to pagination
#

    SortOrder:
      type: string
      default: asc
      enum:
      - asc
      - desc
    
    SortColumnsProfile:
      type: object
      required:
      - model_type
      - columnName
      - sortOrder
      properties: 
        model_type:
          type: string
          enum:
          - ColumnAndSort
        columnName:
          type: string
          default: id
          enum: 
          - id
          - name
        sortOrder:
          $ref: '#/components/schemas/SortOrder'

      
    PaginationContextProfile:
      type: object
      required: 
      - maxItemsPerPage
      properties:
        model_type:
          type: string
          enum:
          - PaginationContext
        maxItemsPerPage:
          type: integer
          format: int32
          default: 20
        lastReturnedPageNumber:
          type: integer
          format: int32
        totalItemsReturned:
          type: integer
          format: int32
        lastPage:
          type: boolean
        cursor:
          type: string
      example: 
        model_type: PaginationContext
        maxItemsPerPage: 10
          
      
    PaginationResponseProfile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        context:
          $ref: '#/components/schemas/PaginationContextProfile'
        
#
# Other Objects
#
    AutoOrManualString:
      type: object
      properties:
        auto:
          type: boolean
        value:
          type: string      
    
    BestAPSteerType:
      type: string
      enum:
        - both
        - loadBalanceOnly
        - linkQualityOnly
    
    RadioType:
      type: string
      enum:
        - is5GHz
        - is2dot4GHz
        - is5GHzU
        - is5GHzL
    
    StateSetting:
      type: string
      enum:
        - enabled
        - disabled
        
    ServiceMetricDataType:
      type: string
      enum:
      - ApNode
      - ApSsid
      - Client
      - Channel
      - Neighbour        

    NetworkForwardMode:
      type: string
      enum:
        - BRIDGE
        - NAT
        
    PairLongLong:
      properties:
        value1:
          type: integer
          format: int64
        value2:
          type: integer
          format: int64
        
    
## ---------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
 
  /api/profile:
    post:
      tags:
      - Profile Data
      summary: Creates new Profile
      operationId: createProfile
      requestBody:
        description: Profile info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Profile Data
      summary: Updates profile record
      operationId: updateProfile
      requestBody:
        description: Profile info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Profile Data
      summary: Deletes Profile record
      operationId: deleteProfileById
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Profile Data
      summary: Get profile using profileId
      operationId: getProfileById
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/profile/orNull:
     get:
      tags:
      - Profile Data
      summary: Get profile using profileId else returns null
      operationId: getProfileByIdOrNull
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/inSet:
     get:
      tags:
      - Profile Data
      summary: Retrieves profile within a specified set
      operationId: getProfileBySet
      parameters:
      - name: profileIdSet
        in: query
        description: Set of profile IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/profile/forCustomer:
    get:
      tags:
      - Profile Data
      summary: Get Profiles By customerId
      operationId: getProfilesByCustomerId
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int64
      - name: profileType
        in: query
        description: profile type
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/ProfileType'
      - name: nameSubstring
        in: query
        required: false
        schema:
          type: string
      - name: sortBy
        in: query
        description: sort options
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SortColumnsProfile'
      - name: paginationContext
        in: query
        description: pagination context
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PaginationContextProfile'
            examples:
              initialPginationContext:
                value:
                  model_type: PaginationContext
                  maxItemsPerPage: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseProfile'
        500:
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/withChildren:
     get:
      tags:
      - Profile Data
      summary: Get a profile with its children
      operationId: getProfileWithChildren
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/topLevelProfiles:
     get:
      tags:
      - Profile Data
      summary: Get top level profiles
      operationId: getTopLevelProfiles
      parameters:
      - name: profileIdSet
        in: query
        description: Set of profile IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PairLongLong'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
          
